<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PointerPlus</name>
    </assembly>
    <members>
        <member name="T:PointerPlus.ExactPtr`1">
            <summary>
            A <see cref="T:PointerPlus.Ptr"/> but allows you to go <seealso cref="M:PointerPlus.ExactPtr`1.Back"/> without having to remember the Type the Ptr was converted to
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:PointerPlus.ExactPtr`1.#ctor(System.Runtime.InteropServices.GCHandle)">
            <summary>
            Create a pointer with a GcHandle
            </summary>
            <param name="handle">The Handle to convert to a <see cref="T:System.IntPtr"/></param>
        </member>
        <member name="P:PointerPlus.ExactPtr`1.Pointer">
            <summary>
            A direct ref to the Handle converted to a <see cref="T:System.IntPtr"/>
            </summary>
        </member>
        <member name="P:PointerPlus.ExactPtr`1.Handle">
            <summary>
            The handle used
            </summary>
        </member>
        <member name="P:PointerPlus.ExactPtr`1.Memory">
            <summary>
            A direct reference to the memory to make an IntPtr
            <para>Will return -1 if <see cref="P:PointerPlus.ExactPtr`1.Handle"/> or <seealso cref="P:PointerPlus.ExactPtr`1.Pointer"/> is default</para>
            </summary>
        </member>
        <member name="M:PointerPlus.ExactPtr`1.Free">
            <summary>
            <see cref="M:System.Runtime.InteropServices.GCHandle.Free"/>
            </summary>
        </member>
        <member name="M:PointerPlus.ExactPtr`1.Dispose">
            <summary>
            <see cref="M:PointerPlus.ExactPtr`1.Free"/>
            </summary>
        </member>
        <member name="M:PointerPlus.ExactPtr`1.Back">
            <summary>
            Convert back to <typeparamref name="T"/>
            <para>Will throw if <see cref="M:PointerPlus.ExactPtr`1.Free"/></para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:PointerPlus.ExactPtr`1.op_Implicit(`0)~PointerPlus.ExactPtr{`0}">
            <summary>
            Implicit, used for methods with T args.
            </summary>
            <param name="o"></param>
        </member>
        <member name="T:PointerPlus.PointerExtensions">
            <summary>
            Extensions.
            </summary>
        </member>
        <member name="M:PointerPlus.PointerExtensions.ToPointer(System.Object)">
            <summary>
            Converts the object directly to an <see cref="T:PointerPlus.Ptr"/>
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:PointerPlus.PointerExtensions.ParseHex(System.String)">
            <summary>
            Parse a Hexadecimal string and convert to a Int
            </summary>
            <param name="toParse"></param>
            <returns></returns>
        </member>
        <member name="M:PointerPlus.PointerExtensions.TryParseHex(System.String,System.Int32@)">
            <summary>
            Try to parse a Hexadecimal string and convert to a Int
            </summary>
            <param name="toParse"></param>
            <param name="parse"></param>
            <returns></returns>
        </member>
        <member name="M:PointerPlus.PointerExtensions.ToMemAddr(System.Int32,System.Boolean)">
            <summary>
            Convert and int to a readable Memory address (Hexadecimal)
            </summary>
            <param name="o"></param>
            <param name="add0x">Add the 0x to the first portion of the hexadecimal</param>
            <returns></returns>
        </member>
        <member name="M:PointerPlus.PointerExtensions.ToUnsafePointer(System.Object)">
            <summary>
            Convert any object to an 'unsafe' <see cref="T:PointerPlus.Ptr"/>
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:PointerPlus.PointerExtensions.ToHandle(System.Object)">
            <summary>
            Direct to a Handle can be converted to an <see cref="T:System.IntPtr"/>
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:PointerPlus.PointerExtensions.ToObject(System.IntPtr)">
            <summary>
            Convert the Ptr to an <see cref="T:System.Object"/>
            </summary>
            <param name="ptr">The pointer</param>
            <returns></returns>
        </member>
        <member name="M:PointerPlus.PointerExtensions.To``1(System.IntPtr)">
            <summary>
            Convert any <see cref="T:System.IntPtr"/> to <typeparamref name="T"/>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ptr"></param>
            <returns></returns>
        </member>
        <member name="M:PointerPlus.PointerExtensions.To``1(PointerPlus.Ptr)">
            <summary>
            Take the pointer from a <see cref="T:PointerPlus.Ptr"/> and make it into a <typeparamref name="T"/>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ptr"></param>
            <returns></returns>
        </member>
        <member name="M:PointerPlus.PointerExtensions.ToObject(PointerPlus.Ptr)">
            <summary>
            Take the pointer from a <see cref="T:PointerPlus.Ptr"/> and make it into an object
            </summary>
            <param name="ptr"></param>
            <returns></returns>
        </member>
        <member name="T:PointerPlus.Ptr">
            <summary>
            A Pointer with an <see cref="T:System.IntPtr"/> and a <seealso cref="T:System.Runtime.InteropServices.GCHandle"/>
            </summary>
        </member>
        <member name="M:PointerPlus.Ptr.#ctor(System.Runtime.InteropServices.GCHandle)">
            <summary>
            Create a pointer with a GcHandle
            </summary>
            <param name="handle">The Handle to convert to a <see cref="T:System.IntPtr"/></param>
        </member>
        <member name="P:PointerPlus.Ptr.Pointer">
            <summary>
            A direct ref to the Handle converted to a <see cref="T:System.IntPtr"/>
            </summary>
        </member>
        <member name="P:PointerPlus.Ptr.Handle">
            <summary>
            The handle used
            </summary>
        </member>
        <member name="P:PointerPlus.Ptr.Memory">
            <summary>
            A direct reference to the memory to make an IntPtr
            <para>Will return -1 if <see cref="P:PointerPlus.Ptr.Handle"/> or <seealso cref="P:PointerPlus.Ptr.Pointer"/> is default</para>
            </summary>
        </member>
        <member name="M:PointerPlus.Ptr.Free">
            <summary>
            <see cref="M:System.Runtime.InteropServices.GCHandle.Free"/>
            </summary>
        </member>
        <member name="M:PointerPlus.Ptr.Dispose">
            <summary>
            <see cref="M:PointerPlus.Ptr.Free"/>
            </summary>
        </member>
    </members>
</doc>
